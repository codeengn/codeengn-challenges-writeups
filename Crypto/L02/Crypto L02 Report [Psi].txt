g i a x ? ? d b k l n q w m f ? c p ? ? z u y j ? v 
a b c d e f g h i j k l m n o p q r s t u v w x y z

일단 위 암호 테이블이다.
암호 테이블에서 빠진 영어 문자들을 살펴보면

e,h,o,r,s,t 였다. 

우리가 풀 문자열을 살펴보면

yefpsqfgt 

인데, q 와 g 는 위 테이블에서 확실히 알수 있으므로 결과적으로
풀어야 할 것은 

?????c?d? 

였다. 일단, 가장 먼저 눈여겨 본 것은 c 와 d 사이에 무엇이 들어가느냐였다.
보통 자음 과 자음 사이에는 모음이 들어가므로 c 와 d 사이, 즉 f 로 의심할 만한 것은
e 와 o 였다. 먼저 e 를 넣어보았다.

??e??ced? 

#include <stdio.h>
int main()
{
	
	char str[] = {"??e??ced?"};
	char key[] = {"horst"};

	int i, j, k, l, m;

	for (i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			for(k=0;k<5;k++)
			{
				for(l=0;l<5;l++)
				{
					for(m=0;m<5;m++)
					{
						if(i==j || j==k || k == i || l == i || m == i || m == l || j==l ||j==m ||k==m ||k==l)
							continue;

						str[0] = key[i];
						str[1] = key[j];
						str[3] = key[k];
						str[4] = key[l];
						str[8] = key[m];

						printf("%s \n", str);
					}
				}
			}
		}
	}
}

임시방편으로 만드느라 소스가 상당히 않좋지만 그래도 꽤 괜찮았다.
나는 처음 ??e?? 에 무엇이 들어갈 수 있는지 조사해보았다. 

프로그램 출력결과를 살펴보면

she 나 toe , tre , the 등등이 있었는데 she 와 the 를 먼저 조사해보았다.

she??ced?
the??ced?

하지만 안타깝게도 위 경우는 ort, 아래 경우는 ors 를 조합해서 만들어야 하는데 말 조차 되는 것이 없었다.

그대로 이번에는 모음  o 로 생각해보았다. 

일단, ??o??cod? 에서 마지막 cod? 는 code 가 거의 학실했다. 
물론 *cod? 형태의 문자열은 coda , code, cods, decode, encode 등이 있지만 암호 문에 맞는 것들은 이것이 전부였고 그마저도 code 빼고 들어 맞는 것이 없었다. 
따라서 마지막 ? 는 e 로 확신할 수 있었다. 

그렇다면 이제 ??o??code 를 어떻게 처리하냐 인데, 이는 그냥 손으로 해보았는데, 다행이도 shortcode 가 기적같이 들어맞았다. 그리고 역시 답이였다 :) 


